# Sets the worker threads to the number of CPU cores available in the 
# system for best performance. Should be > the number of CPU cores.
# Maximum number of connections = worker_processes * worker_connections
# Default: 1
# https://nginx.org/en/docs/ngx_core_module.html#worker_processes
worker_processes auto;

# Provides the configuration file context in which the directives
# that affect connection processing are specified.
# https://nginx.org/en/docs/ngx_core_module.html#events
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    # https://nginx.org/en/docs/ngx_core_module.html#worker_connections
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    # https://nginx.org/en/docs/ngx_core_module.html#multi_accept
    multi_accept on;
}

http {
    # mime types to include and the default one
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    # https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    server {
        # set port
        listen 80;
        # set where to store logs
        access_log /var/log/nginx/access.log compression;
        # set app root
        root /var/www;
        # set file to serve as index
        index index.html index.htm;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

        # Media files (images, icons, video, audio)
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /awesomepage.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}